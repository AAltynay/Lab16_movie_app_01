{"ast":null,"code":"import axios from 'axios';\nimport MovieList from '../components/MovieList.vue';\nexport default {\n  components: {\n    MovieList\n  },\n  data() {\n    return {\n      movies: [],\n      originalMovies: []\n    };\n  },\n  methods: {\n    async fetchMovies() {\n      const response = await axios.get('https://imdb-top-100-movies.p.rapidapi.com/', {\n        headers: {\n          'x-rapidapi-key': '6013afbe3fmshfbf1f211f1d308cp11425fjsne94ccd89e081',\n          'x-rapidapi-host': 'imdb-top-100-movies.p.rapidapi.com'\n        }\n      });\n      this.movies = response.data.slice(0, 20);\n      this.originalMovies = this.movies;\n    },\n    applyFilter(filteredMovies) {\n      this.movies = filteredMovies;\n    },\n    filterHighRating() {\n      this.movies = this.originalMovies.filter(movie => movie.imDbRating > 9);\n    },\n    filterPost2000() {\n      this.movies = this.originalMovies.filter(movie => movie.year > 2000);\n    }\n  },\n  created() {\n    this.fetchMovies();\n  }\n};","map":{"version":3,"names":["axios","MovieList","components","data","movies","originalMovies","methods","fetchMovies","response","get","headers","slice","applyFilter","filteredMovies","filterHighRating","filter","movie","imDbRating","filterPost2000","year","created"],"sources":["C:\\Users\\Acer\\Downloads\\movie-app\\src\\views\\Home.vue"],"sourcesContent":["\r\n<template> \r\n  <div> \r\n    <h2>Top Movies</h2> \r\n    <MovieList :movies=\"movies\" @filter=\"applyFilter\" /> \r\n    <button @click=\"filterHighRating\">Filter by Rating > 9</button> \r\n    <button @click=\"filterPost2000\">Filter by Year > 2000</button> \r\n    <router-link to=\"/movies\">Find Movie</router-link> \r\n  </div> \r\n</template> \r\n \r\n<script> \r\nimport axios from 'axios'; \r\nimport MovieList from '../components/MovieList.vue'; \r\n \r\nexport default { \r\n  components: { MovieList }, \r\n  data() { \r\n    return { \r\n      movies: [], \r\n      originalMovies: [], \r\n    }; \r\n  }, \r\n  methods: { \r\n    async fetchMovies() { \r\n      const response = await axios.get('https://imdb-top-100-movies.p.rapidapi.com/', { \r\n        headers: { \r\n          'x-rapidapi-key': '6013afbe3fmshfbf1f211f1d308cp11425fjsne94ccd89e081', \r\n          'x-rapidapi-host': 'imdb-top-100-movies.p.rapidapi.com', \r\n        }, \r\n      }); \r\n      this.movies = response.data.slice(0, 20); \r\n      this.originalMovies = this.movies; \r\n    }, \r\n    applyFilter(filteredMovies) { \r\n      this.movies = filteredMovies; \r\n    }, \r\n    filterHighRating() { \r\n      this.movies = this.originalMovies.filter(movie => movie.imDbRating > 9); \r\n    }, \r\n    filterPost2000() { \r\n      this.movies = this.originalMovies.filter(movie => movie.year > 2000); \r\n    }, \r\n  }, \r\n  created() { \r\n    this.fetchMovies(); \r\n  }, \r\n}; \r\n</script>"],"mappings":"AAYA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,6BAA6B;AAEnD,eAAe;EACbC,UAAU,EAAE;IAAED;EAAU,CAAC;EACzBE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,6CAA6C,EAAE;QAC9EC,OAAO,EAAE;UACP,gBAAgB,EAAE,oDAAoD;UACtE,iBAAiB,EAAE;QACrB;MACF,CAAC,CAAC;MACF,IAAI,CAACN,MAAK,GAAII,QAAQ,CAACL,IAAI,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACxC,IAAI,CAACN,cAAa,GAAI,IAAI,CAACD,MAAM;IACnC,CAAC;IACDQ,WAAWA,CAACC,cAAc,EAAE;MAC1B,IAAI,CAACT,MAAK,GAAIS,cAAc;IAC9B,CAAC;IACDC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACV,MAAK,GAAI,IAAI,CAACC,cAAc,CAACU,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,UAAS,GAAI,CAAC,CAAC;IACzE,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACd,MAAK,GAAI,IAAI,CAACC,cAAc,CAACU,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACG,IAAG,GAAI,IAAI,CAAC;IACtE;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}