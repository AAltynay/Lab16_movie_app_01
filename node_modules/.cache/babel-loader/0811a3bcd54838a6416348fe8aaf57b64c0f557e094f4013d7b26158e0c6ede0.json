{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SearchForm = _resolveComponent(\"SearchForm\");\n  const _component_MovieList = _resolveComponent(\"MovieList\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Search Movies\", -1 /* HOISTED */)), _createVNode(_component_SearchForm, {\n    onSearch: $options.searchMovies\n  }, null, 8 /* PROPS */, [\"onSearch\"]), _createVNode(_component_MovieList, {\n    movies: $data.searchResults\n  }, null, 8 /* PROPS */, [\"movies\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_SearchForm","onSearch","$options","searchMovies","_component_MovieList","movies","$data","searchResults"],"sources":["C:\\Users\\Acer\\Downloads\\Lab16_Movie_app-main\\Lab16_Movie_app-main\\src\\views\\Movies.vue"],"sourcesContent":["<template> \n  <div> \n    <h2>Search Movies</h2> \n    <SearchForm @search=\"searchMovies\" /> \n    <MovieList :movies=\"searchResults\" /> \n  </div> \n</template> \n \n<script> \nimport axios from 'axios'; \nimport MovieList from '../components/MovieList.vue'; \nimport SearchForm from '../components/SearchForm.vue'; \n \nexport default { \n  components: { MovieList, SearchForm }, \n  data() { \n    return { \n      searchResults: [], \n    }; \n  }, \n  methods: { \n    async searchMovies(query) { \n      const response = await axios.get(`https://imdb-api.com/en/API/SearchTitle/<API_KEY>/${query}`); \n      this.searchResults = response.data.results || []; \n    }, \n  }, \n}; \n</script>"],"mappings":";;;;uBACEA,mBAAA,CAIM,c,0BAHJC,mBAAA,CAAsB,YAAlB,eAAa,sBACjBC,YAAA,CAAqCC,qBAAA;IAAxBC,QAAM,EAAEC,QAAA,CAAAC;EAAY,uCACjCJ,YAAA,CAAqCK,oBAAA;IAAzBC,MAAM,EAAEC,KAAA,CAAAC;EAAa,oC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}