{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MovieList = _resolveComponent(\"MovieList\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Top Movies\", -1 /* HOISTED */)), _createVNode(_component_MovieList, {\n    movies: $data.movies,\n    onFilter: $options.applyFilter\n  }, null, 8 /* PROPS */, [\"movies\", \"onFilter\"]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.filterHighRating && $options.filterHighRating(...args))\n  }, \"Filter by Rating > 9\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.filterPost2000 && $options.filterPost2000(...args))\n  }, \"Filter by Year > 2000\"), _createVNode(_component_router_link, {\n    to: \"/movies\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Find Movie\")])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createVNode","_component_MovieList","movies","$data","onFilter","$options","applyFilter","onClick","_cache","args","filterHighRating","filterPost2000","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\Acer\\Downloads\\movie-app\\src\\views\\Home.vue"],"sourcesContent":["\r\n<template> \r\n  <div> \r\n    <h2>Top Movies</h2> \r\n    <MovieList :movies=\"movies\" @filter=\"applyFilter\" /> \r\n    <button @click=\"filterHighRating\">Filter by Rating > 9</button> \r\n    <button @click=\"filterPost2000\">Filter by Year > 2000</button> \r\n    <router-link to=\"/movies\">Find Movie</router-link> \r\n  </div> \r\n</template> \r\n \r\n<script> \r\nimport axios from 'axios'; \r\nimport MovieList from '../components/MovieList.vue'; \r\n \r\nexport default { \r\n  components: { MovieList }, \r\n  data() { \r\n    return { \r\n      movies: [], \r\n      originalMovies: [], \r\n    }; \r\n  }, \r\n  methods: { \r\n    async fetchMovies() { \r\n      const response = await axios.get('https://imdb-top-100-movies.p.rapidapi.com/', { \r\n        headers: { \r\n          'x-rapidapi-key': '6013afbe3fmshfbf1f211f1d308cp11425fjsne94ccd89e081', \r\n          'x-rapidapi-host': 'imdb-top-100-movies.p.rapidapi.com', \r\n        }, \r\n      }); \r\n      this.movies = response.data.slice(0, 20); \r\n      this.originalMovies = this.movies; \r\n    }, \r\n    applyFilter(filteredMovies) { \r\n      this.movies = filteredMovies; \r\n    }, \r\n    filterHighRating() { \r\n      this.movies = this.originalMovies.filter(movie => movie.imDbRating > 9); \r\n    }, \r\n    filterPost2000() { \r\n      this.movies = this.originalMovies.filter(movie => movie.year > 2000); \r\n    }, \r\n  }, \r\n  created() { \r\n    this.fetchMovies(); \r\n  }, \r\n}; \r\n</script>"],"mappings":";;;;uBAEEA,mBAAA,CAMM,c,0BALJC,mBAAA,CAAmB,YAAf,YAAU,sBACdC,YAAA,CAAoDC,oBAAA;IAAxCC,MAAM,EAAEC,KAAA,CAAAD,MAAM;IAAGE,QAAM,EAAEC,QAAA,CAAAC;mDACrCP,mBAAA,CAA+D;IAAtDQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,gBAAA,IAAAL,QAAA,CAAAK,gBAAA,IAAAD,IAAA,CAAgB;KAAE,sBAAoB,GACtDV,mBAAA,CAA8D;IAArDQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAM,cAAA,IAAAN,QAAA,CAAAM,cAAA,IAAAF,IAAA,CAAc;KAAE,uBAAqB,GACrDT,YAAA,CAAkDY,sBAAA;IAArCC,EAAE,EAAC;EAAS;IAP7BC,OAAA,EAAAC,QAAA,CAO8B,MAAUP,MAAA,QAAAA,MAAA,OAPxCQ,gBAAA,CAO8B,YAAU,E;IAPxCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}